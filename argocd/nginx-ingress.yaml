apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: nginx-ingress
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
  labels:
    app.kubernetes.io/name: nginx-ingress
    app.kubernetes.io/part-of: argocd
spec:
  project: default
  source:
    repoURL: https://kubernetes.github.io/ingress-nginx
    chart: ingress-nginx
    targetRevision: 4.8.3
    helm:
      parameters:
        - name: controller.service.type
          value: NodePort
        - name: controller.service.nodePorts.http
          value: "30080"
        - name: controller.service.nodePorts.https
          value: "30443"
        - name: controller.hostNetwork
          value: "false"
        - name: controller.kind
          value: Deployment
        - name: controller.nodeSelector."ingress-ready"
          value: "true"
        - name: controller.tolerations[0].key
          value: node-role.kubernetes.io/control-plane
        - name: controller.tolerations[0].operator
          value: Equal
        - name: controller.tolerations[0].effect
          value: NoSchedule
        - name: controller.tolerations[1].key
          value: node-role.kubernetes.io/master
        - name: controller.tolerations[1].operator
          value: Equal
        - name: controller.tolerations[1].effect
          value: NoSchedule
      values: |
        controller:
          # Enable the ingress controller
          enabled: true
          
          # Use Deployment instead of DaemonSet for KIND
          kind: Deployment
          replicaCount: 1
          
          # NodePort configuration for KIND
          service:
            type: NodePort
            nodePorts:
              http: 30080
              https: 30443
              tcp: {}
              udp: {}
          
          # Add tolerations for control-plane nodes
          tolerations:
            - key: node-role.kubernetes.io/control-plane
              operator: Equal
              effect: NoSchedule
            - key: node-role.kubernetes.io/master
              operator: Equal
              effect: NoSchedule
          
          # Node selector for KIND nodes
          nodeSelector:
            ingress-ready: "true"
          
          # Resource configuration
          resources:
            requests:
              cpu: 100m
              memory: 90Mi
            limits:
              cpu: 100m
              memory: 90Mi
          
          # Configuration for KIND compatibility
          config:
            use-forwarded-headers: "true"
            compute-full-forwarded-for: "true"
            use-proxy-protocol: "false"
          
          # Admission webhooks (can be disabled for simplicity)
          admissionWebhooks:
            enabled: true
            patch:
              enabled: true
              image:
                registry: registry.k8s.io
                image: ingress-nginx/kube-webhook-certgen
                tag: v20231011-8b53cabe0
          
          # Metrics configuration
          metrics:
            enabled: true
            service:
              annotations:
                prometheus.io/scrape: "true"
                prometheus.io/port: "10254"
            serviceMonitor:
              enabled: false
          
          # Security context
          containerSecurityContext:
            allowPrivilegeEscalation: true
            capabilities:
              drop:
                - ALL
              add:
                - NET_BIND_SERVICE
            runAsUser: 101
        
        # Default backend (optional but recommended)
        defaultBackend:
          enabled: true
          image:
            registry: registry.k8s.io
            image: defaultbackend-amd64
            tag: "1.5"
          resources:
            requests:
              cpu: 10m
              memory: 20Mi
            limits:
              cpu: 10m
              memory: 20Mi
  destination:
    server: https://kubernetes.default.svc
    namespace: ingress-nginx
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - PrunePropagationPolicy=foreground
      - PruneLast=true
      - ServerSideApply=true
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
  revisionHistoryLimit: 3